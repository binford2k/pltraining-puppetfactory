#! /usr/bin/env ruby

require 'rubygems'
require 'optparse'

require 'doppelganger'

options = {}
optparse = OptionParser.new do |opts|
    opts.banner = "This is a simple non-root user management simulation.
The following actions are available:

  * pl-user list
  * pl-user create <user> [-d <homedir>] [-s <shell>] [-g <group>]
  * pl-user modify <user> [-d <homedir>] [-s <shell>] [-g <group>]
  * pl-user delete|remove <user>

"

    opts.on("-d HOMEDIR", "--home-dir HOMEDIR", "Specify the user's home directory.") do |opt|
        options[:homedir] = opt
    end

    opts.on("-s SHELL", "--shell SHELL", "Specify the user's shell.") do |opt|
        options[:shell] = opt
    end

    opts.on("-g GROUP", "--group GROUP", "Speficy the user's primary group.") do |opt|
        options[:group] = true
    end

    opts.separator('')

    opts.on("-h", "--help", "Displays this help") do
        puts opts
        exit
    end
end
optparse.parse!

action = ARGV[0]
name   = ARGV[1] if ARGV.size == 2

users = Doppelganger.new('users')
case action
when 'list'
  users.list

when 'create', 'modify'
  puts optparse unless defined?(name)

  user = users.retrieve(name) || {}
  user[:home]  = options[:homedir] || "/home/#{name}"
  user[:shell] = options[:shell]   || "/bin/bash"
  user[:group] = options[:group]   || name

  users.insert(name, user)
  users.save

when 'delete', 'remove'
  usage() unless defined?(name)

  users.remove(name)
  users.save

else
  puts optparse
end
